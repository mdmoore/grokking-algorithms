Ex. 2.5

Question:
In reality, Facebook uses neither an array nor a linked list to store user information. 
Let’s consider a hybrid data structure: an array of linked lists. You have an array with 
26 slots. Each slot points to a linked list. For example, the first slot in the array 
points to a linked list containing all the usernames starting with a. The second slot 
points to a linked list containing all the usernames starting with b, and so on.

2242.5In reality, Facebook uses neither an array nor a linked list to store user i
nformation. Let’s consider a hybrid data structure: an array of linked lists. You 
have an array with 26 slots. Each slot points to a linked list. For example, the 
first slot in the array points to a linked list containing all the usernames starting 
with a. The second slot points to a linked list containing all the usernames starting 
with b, and so on.Suppose Adit B signs up for Facebook, and you want to add them to the 
list. You go to slot 1 in the array, go to the linked list for slot 1, and add Adit B at 
the end. Now, suppose you want to search for Zakhir H. You go to slot 26, which points to 
a linked list of all the Z names. Then you search through that list to find Zakhir H.Compare 
this hybrid data structure to arrays and linked lists. Is it slower or faster than each for 
searching and inserting? You don’t have to give Big O run times, just whether the new data 
structure would be faster or slower.

Answer:
My first thought was that, because we're combining 2 structures, both reading and inserting
would be double the time compared to reading/inserting into either an array or linked
list, since the operations would be doubled.  But, it turns out that only reading is slower
than arrays.  Reading is faster than linked lists. Insterting is faster than arrays and the 
same amount of time for linked list.